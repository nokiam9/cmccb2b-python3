version: '2'

services:
  nginx:
    build:
      context: nginx/
    image: cmccb2b/nginx
    container_name: nginx
    restart: always

    networks:
      - cmccb2b_net
    ports:
      - "80:80"
      - "6800:6800"
      - "9000:9000"
      - "443:443"

  scrapy:
    build:
      context: scrapy/
      args:
        AppMajorVersion: "0"
        AppMinorVersion: "1"
    image: cmccb2b/scrapy:0.1-python3.6
    container_name: scrapy
    restart: always

    networks:
      - cmccb2b_net
    expose:
      - 6800

    volumes:
      - log_volume:/app/logs

  flask:
    build:
      context: flask/
      args:
        AppMajorVersion: "0"
        AppMinorVersion: "1"
    image: cmccb2b/flask:0.1-python3.6
    container_name: flask
    restart: always

    networks:
      - cmccb2b_net
    expose:
      - 80

    environment:
      - FLASK_APP=app/main.py
      - FLASK_DEBUG=1
      - 'RUN=flask run --host=0.0.0.0 --port=80'
#      - LISTEN_PORT=8080    # defined for http nginx in docker:flask

  crontab:
    build:
      context: crontab/
    image: cmccb2b/crontab:1.1
    container_name: crontab
    restart: always
    depends_on:
      - flask

    networks:
      - cmccb2b_net

    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - ./crontab/config/config.json:/opt/crontab/config.json:ro

  xunsearch-server:
    build:
      context: xunsearch/
      dockerfile: xunsearch-server.dockerfile
    image: cmccb2b/xunsearch-server
    container_name: xunsearch-server
    restart: always

    networks:
      - cmccb2b_net
    expose:
      - 8383
      - 8384

    volumes:
      - ../data/xunsearch:/usr/local/xunsearch/data

  php:
    build:
      context: xunsearch
      dockerfile: php.dockerfile
    image: cmccb2b/php
    container_name: php
    restart: always

    networks:
      - cmccb2b_net

    expose:
      - 80

networks:
  cmccb2b_net:
    external: true


volumes:
  log_volume:
